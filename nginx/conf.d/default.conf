# This is where token introspection responses will be stored if proxy_cache is enabled
proxy_cache_path /var/cache/nginx/tokens levels=1 keys_zone=token_responses:1m max_size=10m;

js_import conf.d/auth.js;

server {
    listen 80;

    server_name _;
    index index.php index.html index.htm;

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        allow all;
        access_log off;
        log_not_found off;
    }

    location ~ /\.ht {
        deny all;
    }

    location = /_auth_js {
        internal;
        js_content auth.makeSubAuthRequest;
    }

    location = /_auth_verify {
        internal;

        proxy_pass http://auth-app:8080/api/auth/verify;

        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Token $http_x_token;

        proxy_cache           token_responses; # Enable caching of token introspection responses
        proxy_cache_key       $http_x_token;   # Cache the response for each unique access token
        proxy_cache_lock      on;              # Don't allow simultaneous requests for same token
        proxy_cache_valid     200 60s;         # How long to use cached introspection responses
        proxy_cache_use_stale error timeout;   # Use old responses if we cannot reach the server
        proxy_ignore_headers  Cache-Control Expires Set-Cookie; # Cache even when receiving these
    }

    location /api/auth/ {
        proxy_pass http://auth-app:8080;

        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    location /api/service/ {
        auth_request /_auth_js;
        auth_request_set $authdata $sent_http_x_auth_data;

        proxy_pass http://service-app:8080;

        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Authenticated '1';
        proxy_set_header X-Auth-Data $authdata;
    }
}